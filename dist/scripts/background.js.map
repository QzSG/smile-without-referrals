{"version":3,"sources":["scripts/background.js"],"names":["chrome","runtime","onInstalled","addListener","details","console","log","previousVersion","regex","webRequest","onBeforeRequest","originalUrl","url","redirected","notLogin","test","match","notifications","create","type","iconUrl","title","message","redirectUrl","exec","urls","types"],"mappings":"AAAA,YAEAA,QAAOC,QAAQC,YAAYC,YAAY,SAAUC,GAC7CC,QAAQC,IAAI,kBAAmBF,EAAQG,kBAG3C,IAAIC,OAAQ,iMAEZR,QAAOS,WAAWC,gBAAgBP,YAAY,SAAUC,GACpD,GAAIO,GAAcP,EAAQQ,IACtBC,EAAa,iBACbC,EAAW,YACf,IAAIN,MAAMO,KAAKJ,GAAc,CACzB,GAAmC,MAA/BA,EAAYK,MAAMF,GAQlB,MAPAT,SAAQC,IAAI,aACZN,OAAOiB,cAAcC,OAAO,qBACxBC,KAAM,QACNC,QAAS,sBACTC,MAAO,8BACPC,QAAS,yDAGTC,YAAa,6BAA+Bf,MAAMgB,KAAKb,GAAa,GAGxE,IAAqC,MAAjCA,EAAYK,MAAMH,GAClB,OACIU,YAAa,+BAAiCf,MAAMgB,KAAKb,GAAa,GAAK,IAAME,MAMjGY,MAAO,cACPC,OAAQ,gBACR,aAEJrB,QAAQC,IAAI","file":"background.js","sourcesContent":["'use strict';\n\nchrome.runtime.onInstalled.addListener(function (details) {\n    console.log('previousVersion', details.previousVersion);\n});\n\nvar regex = /(?:www\\.)?ama?zo?n\\.(?:com|ca|co\\.uk|co\\.jp|de|fr)\\/(?:exec\\/obidos\\/ASIN\\/|o\\/|gp\\/product\\/|(?:(?:[^\"\\'\\/]*)\\/)?dp\\/|)(B[0-9]{2}[0-9A-Z]{7}|[0-9]{9}(X|[0-9]))(?:(?:\\/|\\?|\\#)(?:[^\"\\'\\s]*))?/i;\n\nchrome.webRequest.onBeforeRequest.addListener(function (details) {\n    var originalUrl = details.url;\n    var redirected = 'sanitised=true';\n    var notLogin = 'pldnSite=1';\n    if (regex.test(originalUrl)) {\n        if (originalUrl.match(notLogin) != null) {\n            console.log('Not login');\n            chrome.notifications.create('User is not login', {\n                type: 'basic',\n                iconUrl: 'images/icon-128.png',\n                title: 'You are not login to Amazon',\n                message: 'You will be redirected to Amazon Smile after login.'\n            });\n            return {\n                redirectUrl: 'https://www.amazon.com/dp/' + regex.exec(originalUrl)[1]\n            };\n        } else {\n            if (originalUrl.match(redirected) == null) {\n                return {\n                    redirectUrl: 'https://smile.amazon.com/dp/' + regex.exec(originalUrl)[1] + '?' + redirected\n                };\n            }\n        }\n    }\n}, {\n    urls: ['<all_urls>'],\n    types: ['main_frame']\n}, ['blocking']);\n\nconsole.log('Smile without Referrals! Event Page for Browser Action');"]}